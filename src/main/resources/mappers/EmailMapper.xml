<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EmailMapper">

    <insert id="insertOrUpdateCaptcha" parameterType="map">
        MERGE INTO Captcha AS target
            USING (SELECT #{username} AS username, #{captcha} AS captcha, #{createdAt} AS createdAt) AS source
            ON (target.username = source.username)
            WHEN MATCHED THEN
                UPDATE SET captcha = source.captcha, createdAt = source.createdAt
            WHEN NOT MATCHED THEN
                INSERT (username, captcha, createdAt)
                    VALUES (source.username, source.captcha, source.createdAt);
    </insert>


    <select id="checkUsernameOrEmailExists" resultType="int">
        SELECT SUM(count)
        FROM (
                 SELECT COUNT(*) AS count
                 FROM [user]
                 WHERE username = #{username} OR email = #{email}

                 UNION ALL

                 SELECT COUNT(*) AS count
                 FROM RegistrationReview
                 WHERE (username = #{username} OR email = #{email}) AND registrationStatus = 0
             ) AS combined_counts
    </select>

    <select id="checkEmailExists" resultType="int">
        SELECT SUM(count)
        FROM (
                 SELECT COUNT(*) AS count
                 FROM [user]
                 WHERE email = #{email}

                 UNION ALL

                 SELECT COUNT(*) AS count
                 FROM RegistrationReview
                 WHERE email = #{email} AND registrationStatus = 0
             ) AS combined_counts
    </select>

    <select id="checkUserEmailExists" resultType="int">
        SELECT SUM(count)
        FROM (
                 SELECT COUNT(*) AS count
                 FROM [user]
                 WHERE email = #{email}
             ) AS combined_counts
    </select>

    <select id="checkUsernameExists" resultType="int">
        SELECT SUM(count)
        FROM (
                 SELECT COUNT(*) AS count
                 FROM [user]
                 WHERE username = #{username}

                 UNION ALL

                 SELECT COUNT(*) AS count
                 FROM RegistrationReview
                 WHERE username = #{username} AND registrationStatus = 0
             ) AS combined_counts
    </select>



</mapper>